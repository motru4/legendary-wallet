// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/wallet": {
            "post": {
                "description": "Creates a new deposit or withdraw operation for a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Create a wallet operation (deposit/withdraw)",
                "parameters": [
                    {
                        "description": "Operation Request",
                        "name": "operation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WalletOperationRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.OperationCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/wallets": {
            "post": {
                "description": "Creates a new wallet with an initial balance of 0",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create a new wallet",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.WalletCreateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/wallets/{walletId}": {
            "get": {
                "description": "Retrieves the current balance of a wallet by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID (UUIDv4)",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WalletBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/wallets/{walletId}/operations/{operationId}": {
            "get": {
                "description": "Retrieves the status of a specific operation for a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Get operation status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID (UUIDv4)",
                        "name": "walletId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operation ID (UUIDv4)",
                        "name": "operationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OperationStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.OperationCreateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.OperationStatusResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string"
                },
                "processedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "models.WalletBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "models.WalletCreateResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "walletId": {
                    "type": "string"
                }
            }
        },
        "models.WalletOperationRequest": {
            "type": "object",
            "required": [
                "amount",
                "operationType",
                "walletId"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "operationType": {
                    "type": "string",
                    "enum": [
                        "DEPOSIT",
                        "WITHDRAW"
                    ]
                },
                "walletId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Wallet API",
	Description:      "This is a sample server for a wallet service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
